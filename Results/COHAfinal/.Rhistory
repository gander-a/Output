results$Coverage[c] = as.numeric(results$WPs_included[c])/as.numeric(results$Number_WPs[c])
results$Pearson[c] = cor(data$rating, data$sim, method = "pearson")
print(results$Pearson[c])
#Perform hypothesis test to check if results are statistically significant
a = cor.test(data$rating, data$sim, method = "pearson")
print(a$p.value)
results$Pearson_Pvalue[c] = a$p.value
#Perform hypothesis test to check if results are statistically significant
results$Spearman[c] = cor(data$rating, data$sim, method = "spearman")
a = cor.test(data$rating, data$sim, method = "spearman")
results$Spearman_Pvalue[c] = a$p.value
#Fill results statistics dataframe
results$Kendall[c] = cor(data$rating, data$sim, method = "kendall")
results$Pearson_cos[c] = cor(data$rating, data$cossim, method = "pearson")
results$Spearman_cos[c] = cor(data$rating, data$cossim, method = "spearman")
results$Kendall_cos[c] = cor(data$rating, data$cossim, method = "kendall")
# texts = paste0(data$word1, " ", data$word2)
# top10 = data[order(data$sim, decreasing = TRUE),][1:10,]
# texts[!(data$sim %in% top10$sim)] = ""
# data$texts = texts
#Select color of scatterplots
if (ds=="MEN") {
col = "#1b9e77"
}
if (ds == "SimVerb") {
col = "#d95f02"
}
if (ds == "SimLex") {
col = "#7570b3"
}
if (ds == "Creativity") {
col = "#e7298a"
}
#Plot scatterplot
g = ggplot(data, aes(x=rating, y = sim)) +
geom_point(alpha = 0.6, position="identity", color = col, size = 8) +
geom_smooth(color = col, fill = col, size = 3) +
# geom_text_repel(hjust=0, vjust=0,size=10)+
labs(y="Predicted values",
x="Ground truth rating",
title=sprintf("%s", ds),
subtitle = sprintf("Pearson: %s, Spearman: %s", round(results$Pearson[c], digits = 4), round(cor(data$rating, data$sim, method = "spearman"), digits = 4))) +
theme(panel.grid.minor = element_blank(),panel.background = element_blank(),
axis.line = element_line(colour = "black"))+
theme(text = element_text(size = 35)) +
theme(legend.position = "none")
plot(g)
pngname = sprintf("Plots/%s_%s_quant%s_similarity_%s.png", ds, net, as.character(lower_th), beta)
ggsave(pngname, width = 30, height = 20, units = "cm")
#Plot distributions of predicted and ground truth values
g = ggplot() +
geom_histogram(aes(x = data$sim, fill="b", colour="b"), alpha = 0.5) +
geom_histogram(aes(x = data$rating, fill="g", colour="g") ,alpha = 0.5) +
geom_smooth() +
labs(y="Frequency",
x="Similarity",
title=sprintf("%s", ds)) +
theme(panel.grid.minor = element_blank(),panel.background = element_blank(),
axis.line = element_line(colour = "black"))+
theme(text = element_text(size = 35)) +
scale_colour_manual(name="Similarity", values=c("g" = "gray", "b"=col, "r" = "red"), labels=c("b"="Predicted values", "g"="Ground truth rating", "r" = "Cosine sim")) +
scale_fill_manual(name="Similarity", values=c("g" = "gray", "b"=col, "r" = "red"), labels=c("b"="Predicted values", "g"="Ground truth rating", "r" = "Cosine sim"))
plot(g)
pngname = sprintf("Plots/%s_%s_th%s_histogram_similarity_%s.png", ds, net, as.character(lower_th), beta)
ggsave(pngname, width = 30, height = 20, units = "cm")
c = c+1
#Create output table for the creativity experiment
if (ds == "Creativity") {
cc_sim_crea_pearson = cor(1-data$sim, data$creativity_orig, method = "pearson")
cc_sim_crea_spear = cor(1-data$sim, data$creativity_orig, method = "spearman")
summary = t(as.data.frame(matrix(c(cc_sim_crea_pearson, cc_sim_crea_spear, cc_ff_crea_pearson, cc_ff_crea_spear))))
colnames(summary) = c("Pearson Colex-based", "Spearman Colex-based", "Pearson FF", "Spearman FF")
}
}
}
}
}
#Store final table of results
suppressMessages(write.xlsx(results,sprintf("Tables/Word_similarity_summary.xlsx") ,row.names = TRUE))
table(data_all$class)
table(data$class)
table(data_all$class)/table(data$class)
table(data$class)/table(data_all$class)
library(ggplot2)
library(readxl)
sources_coha <- read_excel("Datasets/COHA/sources_coha.xlsx")
sources_coha2000 = sources_coha[sources_coha$`# words`>=2000,]
g = ggplot() +
geom_histogram(aes(x = sources_coha$`# words`, fill = "<2000 words"), col = "white")+
geom_histogram(aes(x = sources_coha2000$`# words`, fill = "=2000 words"), col = "white")+
labs(y="Frequency",
x="Number of words") +
theme(panel.grid.minor = element_blank(),panel.background = element_blank(),
axis.line = element_line(colour = "black"), axis.text.x = element_text(angle=0),
axis.text=element_text(size=40))+
theme(text = element_text(size = 40))+
scale_y_log10()+
theme(legend.position = c(0.8, 0.8))+
scale_fill_discrete("Category")+
scale_x_continuous(breaks = c(0,100000,200000,300000), labels = c("0","100,000","200,000","300,000"))
plot(g)
pngname = sprintf("PlotsCluster/Cohanumberwords.png")
ggsave(pngname, width = 30, height = 20, units = "cm")
g = ggplot() +
geom_histogram(aes(x = sources_coha$year, fill = "All"), col = "white")+
geom_histogram(aes(x = sources_coha$year[sources_coha$genre=="FIC"], fill = "Fiction"), col = "white")+
labs(y="Frequency",
x="Year") +
theme(panel.grid.minor = element_blank(),panel.background = element_blank(),
axis.line = element_line(colour = "black"), axis.text.x = element_text(angle=0),
axis.text=element_text(size=40))+
theme(text = element_text(size = 40))+
scale_y_log10()+
theme(legend.position = c(0.15, 0.85))+
geom_hline(yintercept=40, linetype="dashed", color = "red", size = 2)+
scale_fill_discrete("Category")
plot(g)
pngname = sprintf("PlotsCluster/Cohahistdecades.png")
ggsave(pngname, width = 30, height = 20, units = "cm")
t = as.data.frame(table(sources_coha$genre))
t$Var1 = c("Fiction", "Magazine", "News", "Non-fiction")
g = ggplot(aes(y = Freq, x = Var1, fill = Var1), data = t) +
geom_bar(stat = "identity")+
labs(y="Frequency",
x="") +
theme(panel.grid.minor = element_blank(),panel.background = element_blank(),
axis.line = element_line(colour = "black"), axis.text.x = element_text(angle=45, vjust = 0.5),
axis.text=element_text(size=40))+
theme(text = element_text(size = 40))+
theme(legend.position = "none")
plot(g)
pngname = sprintf("PlotsCluster/Cohagenre.png")
ggsave(pngname, width = 30, height = 20, units = "cm")
meta = meta[grepl(genre, meta$subjects),]
library(ggplot2)
library(readxl)
mainpath = "C:/Users/Armin/Desktop/Output/"
setwd(mainpath)
sources_coha <- read_excel("Datasets/COHA/sources_coha.xlsx")
sources_coha2000 = sources_coha[sources_coha$`# words`>=2000,]
g = ggplot() +
geom_histogram(aes(x = sources_coha$`# words`, fill = "<2000 words"), col = "white")+
geom_histogram(aes(x = sources_coha2000$`# words`, fill = "=2000 words"), col = "white")+
labs(y="Frequency",
x="Number of words") +
theme(panel.grid.minor = element_blank(),panel.background = element_blank(),
axis.line = element_line(colour = "black"), axis.text.x = element_text(angle=0),
axis.text=element_text(size=40))+
theme(text = element_text(size = 40))+
scale_y_log10()+
theme(legend.position = c(0.8, 0.8))+
scale_fill_discrete("Category")+
scale_x_continuous(breaks = c(0,100000,200000,300000), labels = c("0","100,000","200,000","300,000"))
plot(g)
pngname = sprintf("PlotsCluster/Cohanumberwords.png")
ggsave(pngname, width = 30, height = 20, units = "cm")
g = ggplot() +
geom_histogram(aes(x = sources_coha$year, fill = "All"), col = "white")+
geom_histogram(aes(x = sources_coha$year[sources_coha$genre=="FIC"], fill = "Fiction"), col = "white")+
labs(y="Frequency",
x="Year") +
theme(panel.grid.minor = element_blank(),panel.background = element_blank(),
axis.line = element_line(colour = "black"), axis.text.x = element_text(angle=0),
axis.text=element_text(size=40))+
theme(text = element_text(size = 40))+
scale_y_log10()+
theme(legend.position = c(0.15, 0.85))+
geom_hline(yintercept=40, linetype="dashed", color = "red", size = 2)+
scale_fill_discrete("Category")
plot(g)
pngname = sprintf("PlotsCluster/Cohahistdecades.png")
ggsave(pngname, width = 30, height = 20, units = "cm")
t = as.data.frame(table(sources_coha$genre))
t$Var1 = c("Fiction", "Magazine", "News", "Non-fiction")
g = ggplot(aes(y = Freq, x = Var1, fill = Var1), data = t) +
geom_bar(stat = "identity")+
labs(y="Frequency",
x="") +
theme(panel.grid.minor = element_blank(),panel.background = element_blank(),
axis.line = element_line(colour = "black"), axis.text.x = element_text(angle=45, vjust = 0.5),
axis.text=element_text(size=40))+
theme(text = element_text(size = 40))+
theme(legend.position = "none")
plot(g)
pngname = sprintf("PlotsCluster/Cohagenre.png")
ggsave(pngname, width = 30, height = 20, units = "cm")
meta = meta[grepl(genre, meta$subjects),]
library(ggplot2)
library(readxl)
mainpath = "C:/Users/Armin/Desktop/Data Science/CSH Project/Colex_vader/Armin/Runoncluster/"
setwd(mainpath)
sources_coha <- read_excel("Datasets/COHA/sources_coha.xlsx")
sources_coha2000 = sources_coha[sources_coha$`# words`>=2000,]
g = ggplot() +
geom_histogram(aes(x = sources_coha$`# words`, fill = "<2000 words"), col = "white")+
geom_histogram(aes(x = sources_coha2000$`# words`, fill = "=2000 words"), col = "white")+
labs(y="Frequency",
x="Number of words") +
theme(panel.grid.minor = element_blank(),panel.background = element_blank(),
axis.line = element_line(colour = "black"), axis.text.x = element_text(angle=0),
axis.text=element_text(size=40))+
theme(text = element_text(size = 40))+
scale_y_log10()+
theme(legend.position = c(0.8, 0.8))+
scale_fill_discrete("Category")+
scale_x_continuous(breaks = c(0,100000,200000,300000), labels = c("0","100,000","200,000","300,000"))
plot(g)
pngname = sprintf("PlotsCluster/Cohanumberwords.png")
ggsave(pngname, width = 30, height = 20, units = "cm")
g = ggplot() +
geom_histogram(aes(x = sources_coha$year, fill = "All"), col = "white")+
geom_histogram(aes(x = sources_coha$year[sources_coha$genre=="FIC"], fill = "Fiction"), col = "white")+
labs(y="Frequency",
x="Year") +
theme(panel.grid.minor = element_blank(),panel.background = element_blank(),
axis.line = element_line(colour = "black"), axis.text.x = element_text(angle=0),
axis.text=element_text(size=40))+
theme(text = element_text(size = 40))+
scale_y_log10()+
theme(legend.position = c(0.15, 0.85))+
geom_hline(yintercept=40, linetype="dashed", color = "red", size = 2)+
scale_fill_discrete("Category")
plot(g)
pngname = sprintf("PlotsCluster/Cohahistdecades.png")
ggsave(pngname, width = 30, height = 20, units = "cm")
t = as.data.frame(table(sources_coha$genre))
t$Var1 = c("Fiction", "Magazine", "News", "Non-fiction")
g = ggplot(aes(y = Freq, x = Var1, fill = Var1), data = t) +
geom_bar(stat = "identity")+
labs(y="Frequency",
x="") +
theme(panel.grid.minor = element_blank(),panel.background = element_blank(),
axis.line = element_line(colour = "black"), axis.text.x = element_text(angle=45, vjust = 0.5),
axis.text=element_text(size=40))+
theme(text = element_text(size = 40))+
theme(legend.position = "none")
plot(g)
pngname = sprintf("PlotsCluster/Cohagenre.png")
ggsave(pngname, width = 30, height = 20, units = "cm")
meta = meta[grepl(genre, meta$subjects),]
mainpath = "C:/Users/Armin/Desktop/Data Science/CSH Project/Colex_vader/Armin/Runoncluster/"
setwd(mainpath)
mainpath = "C:/Users/Armin/Desktop/Data Science/CSH Project/Colex_vader/Runoncluster/"
library(ggplot2)
library(readxl)
mainpath = "C:/Users/Armin/Desktop/Data Science/CSH Project/Colex_vader/Runoncluster/"
setwd(mainpath)
sources_coha <- read_excel("Datasets/COHA/sources_coha.xlsx")
sources_coha2000 = sources_coha[sources_coha$`# words`>=2000,]
g = ggplot() +
geom_histogram(aes(x = sources_coha$`# words`, fill = "<2000 words"), col = "white")+
geom_histogram(aes(x = sources_coha2000$`# words`, fill = "=2000 words"), col = "white")+
labs(y="Frequency",
x="Number of words") +
theme(panel.grid.minor = element_blank(),panel.background = element_blank(),
axis.line = element_line(colour = "black"), axis.text.x = element_text(angle=0),
axis.text=element_text(size=40))+
theme(text = element_text(size = 40))+
scale_y_log10()+
theme(legend.position = c(0.8, 0.8))+
scale_fill_discrete("Category")+
scale_x_continuous(breaks = c(0,100000,200000,300000), labels = c("0","100,000","200,000","300,000"))
plot(g)
pngname = sprintf("PlotsCluster/Cohanumberwords.png")
ggsave(pngname, width = 30, height = 20, units = "cm")
g = ggplot() +
geom_histogram(aes(x = sources_coha$year, fill = "All"), col = "white")+
geom_histogram(aes(x = sources_coha$year[sources_coha$genre=="FIC"], fill = "Fiction"), col = "white")+
labs(y="Frequency",
x="Year") +
theme(panel.grid.minor = element_blank(),panel.background = element_blank(),
axis.line = element_line(colour = "black"), axis.text.x = element_text(angle=0),
axis.text=element_text(size=40))+
theme(text = element_text(size = 40))+
scale_y_log10()+
theme(legend.position = c(0.15, 0.85))+
geom_hline(yintercept=40, linetype="dashed", color = "red", size = 2)+
scale_fill_discrete("Category")
plot(g)
pngname = sprintf("PlotsCluster/Cohahistdecades.png")
ggsave(pngname, width = 30, height = 20, units = "cm")
t = as.data.frame(table(sources_coha$genre))
t$Var1 = c("Fiction", "Magazine", "News", "Non-fiction")
g = ggplot(aes(y = Freq, x = Var1, fill = Var1), data = t) +
geom_bar(stat = "identity")+
labs(y="Frequency",
x="") +
theme(panel.grid.minor = element_blank(),panel.background = element_blank(),
axis.line = element_line(colour = "black"), axis.text.x = element_text(angle=45, vjust = 0.5),
axis.text=element_text(size=40))+
theme(text = element_text(size = 40))+
theme(legend.position = "none")
plot(g)
pngname = sprintf("PlotsCluster/Cohagenre.png")
ggsave(pngname, width = 30, height = 20, units = "cm")
meta = meta[grepl(genre, meta$subjects),]
rm(list=ls())
library(ggplot2)
library(reshape2)
library(ggalluvial)
library(dplyr)
library(pROC)
library(tidyverse)
#Setup directories
mainpath = "C:/Users/Armin/Desktop/Output/"
setwd(mainpath)
#MULTIPLE RESULT FILES
folders = c("COHAfinal")
for (folder in folders) {
setwd(sprintf("%s/Results/%s", mainpath, folder))
f = list.files()
for (i in 1:length(f)) {
if (i==1) {
name = substr((f[i]), 1, 100)
summary = read.csv(f[i], row.names=NULL, sep="")
summary = summary[,-c(1)]
summary$sim[is.na(summary$sim)] = 0
} else {
d = read.csv(f[i], row.names=NULL, sep="")
d = d[,-c(1)]
summary = rbind(summary, d)
}
}
colnames(summary)[c(3,4)] = c("dec1", "dec2")
summary$dec1 = as.character(summary$dec1)
summary$dec2 = as.character(summary$dec2)
summary = summary[!duplicated(summary[,c(1,2,3)]),]
un = length(unique(summary$index))
print(un)
su = summary
su[,c(1,2,3,4)] = su[,c(2,1,4,3)]
colnames(su) = colnames(summary)
summary = rbind(summary, su)
set.seed(11848230)
summary = summary[sample(1:nrow(summary), nrow(summary)*0.3),]
#Split into train and test set
summary = summary %>% dplyr::group_by(path1, path2, dec1, dec2) %>% dplyr::summarise(meansim = mean(sim))
summary$gt = summary$dec1==summary$dec2
summary$id = paste0(summary$path1, summary$path2, summary$dec1, summary$dec2)
id_unique = unique(summary$id)
prop = 0.7
set.seed(11848230)
train = sample(id_unique, length(id_unique)*prop, replace = FALSE)
test = id_unique[!(id_unique %in% train)]
train = summary[summary$id %in% train, ]
test = summary[summary$id %in% test, ]
decades = unique(test$dec1)
decades = decades[order(decades)]
res = as.data.frame(matrix(NA, length(decades), length(decades)))
colnames(res) = decades
rownames(res) = decades
for (i in 1:(length(decades)-1)) {
for (j in (i+1):length(decades)) {
print(paste(i,j))
subset = train[train$dec1==decades[i],]
subset = subset[(subset$dec2==decades[j])|(subset$dec2==decades[i]),]
subset_test = test[(test$dec1 == decades[i]),]
subset_test = subset_test[(subset_test$dec2 == decades[j])|(subset_test$dec2 == decades[i]),]
boxplot(subset$meansim[subset$gt==TRUE], subset$meansim[subset$gt==FALSE], names = c("Same", "Diff"))
for (k in 1:nrow(subset_test)) {
row = subset_test[k,]
true = sum(row$meansim >= subset$meansim[subset$gt==TRUE])/length(subset$meansim[subset$gt==TRUE])
false = sum(row$meansim <= subset$meansim[subset$gt==FALSE])/length(subset$meansim[subset$gt==FALSE])
row$score = true/(true+false)
if (k == 1) {
testres = row
} else {
testres = rbind(testres, row)
}
}
testres$gt = as.numeric(testres$gt)
stripchart(score ~ gt, data = testres)
rocobj <- roc(testres$gt, testres$score)
if (i == 1) {
assign(paste0("g",j), rocobj)
}
auc = rocobj$auc
res[i,j] = auc
print(auc)
}
}
#create Heatmap
colnames(res) = decades[order(decades)]
rownames(res) = decades[order(decades)]
res = as.data.frame(t(res))
dt2 <- res %>%
rownames_to_column() %>%
gather(colname, value, -rowname)
head(dt2)
p = ggplot(dt2, aes(x = rowname, y = colname, fill = value)) +
geom_tile(color = "white", aes(colour = NA))+
theme(panel.grid.minor = element_blank(),panel.background = element_blank(),
axis.line = element_line(colour = "black"), axis.text.x = element_text(angle=90),
axis.text=element_text(size=25))+
theme(text = element_text(size = 25), plot.title = element_text(size=40)) +
ggtitle("Same/Different decades as Text 1") +
xlab("Text 2") + ylab("Text 1") +
labs() +
scale_fill_continuous(low="pink", high="black",guide="colorbar",na.value="white") +
guides(fill=guide_legend(title="AUC"))
plot(p)
pngname = sprintf("%sPlots/HeatAUC_%s.png", mainpath, folder)
ggsave(pngname, width = 30, height = 20, units = "cm")
}
rm(list=ls())
library(ggplot2)
library(reshape2)
library(ggalluvial)
library(dplyr)
library(pROC)
library(tidyverse)
#Setup directories
mainpath = "C:/Users/Armin/Desktop/Output/"
setwd(mainpath)
#MULTIPLE RESULT FILES
folders = c("COHAfinal")
for (folder in folders) {
setwd(sprintf("%s/Results/%s", mainpath, folder))
f = list.files()
for (i in 1:length(f)) {
if (i==1) {
name = substr((f[i]), 1, 100)
summary = read.csv(f[i], row.names=NULL, sep="")
summary = summary[,-c(1)]
summary$sim[is.na(summary$sim)] = 0
} else {
d = read.csv(f[i], row.names=NULL, sep="")
d = d[,-c(1)]
summary = rbind(summary, d)
}
}
colnames(summary)[c(3,4)] = c("dec1", "dec2")
summary$dec1 = as.character(summary$dec1)
summary$dec2 = as.character(summary$dec2)
summary = summary[!duplicated(summary[,c(1,2,3)]),]
un = length(unique(summary$index))
print(un)
su = summary
su[,c(1,2,3,4)] = su[,c(2,1,4,3)]
colnames(su) = colnames(summary)
summary = rbind(summary, su)
set.seed(11848230)
summary = summary[sample(1:nrow(summary), nrow(summary)*1),]
#Split into train and test set
summary = summary %>% dplyr::group_by(path1, path2, dec1, dec2) %>% dplyr::summarise(meansim = mean(sim))
summary$gt = summary$dec1==summary$dec2
summary$id = paste0(summary$path1, summary$path2, summary$dec1, summary$dec2)
id_unique = unique(summary$id)
prop = 0.7
set.seed(11848230)
train = sample(id_unique, length(id_unique)*prop, replace = FALSE)
test = id_unique[!(id_unique %in% train)]
train = summary[summary$id %in% train, ]
test = summary[summary$id %in% test, ]
decades = unique(test$dec1)
decades = decades[order(decades)]
res = as.data.frame(matrix(NA, length(decades), length(decades)))
colnames(res) = decades
rownames(res) = decades
for (i in 1:(length(decades)-1)) {
for (j in (i+1):length(decades)) {
print(paste(i,j))
subset = train[train$dec1==decades[i],]
subset = subset[(subset$dec2==decades[j])|(subset$dec2==decades[i]),]
subset_test = test[(test$dec1 == decades[i]),]
subset_test = subset_test[(subset_test$dec2 == decades[j])|(subset_test$dec2 == decades[i]),]
boxplot(subset$meansim[subset$gt==TRUE], subset$meansim[subset$gt==FALSE], names = c("Same", "Diff"))
for (k in 1:nrow(subset_test)) {
row = subset_test[k,]
true = sum(row$meansim >= subset$meansim[subset$gt==TRUE])/length(subset$meansim[subset$gt==TRUE])
false = sum(row$meansim <= subset$meansim[subset$gt==FALSE])/length(subset$meansim[subset$gt==FALSE])
row$score = true/(true+false)
if (k == 1) {
testres = row
} else {
testres = rbind(testres, row)
}
}
testres$gt = as.numeric(testres$gt)
stripchart(score ~ gt, data = testres)
rocobj <- roc(testres$gt, testres$score)
if (i == 1) {
assign(paste0("g",j), rocobj)
}
auc = rocobj$auc
res[i,j] = auc
print(auc)
}
}
#create Heatmap
colnames(res) = decades[order(decades)]
rownames(res) = decades[order(decades)]
res = as.data.frame(t(res))
dt2 <- res %>%
rownames_to_column() %>%
gather(colname, value, -rowname)
head(dt2)
p = ggplot(dt2, aes(x = rowname, y = colname, fill = value)) +
geom_tile(color = "white", aes(colour = NA))+
theme(panel.grid.minor = element_blank(),panel.background = element_blank(),
axis.line = element_line(colour = "black"), axis.text.x = element_text(angle=90),
axis.text=element_text(size=25))+
theme(text = element_text(size = 25), plot.title = element_text(size=40)) +
ggtitle("Same/Different decades as Text 1") +
xlab("Text 2") + ylab("Text 1") +
labs() +
scale_fill_continuous(low="pink", high="black",guide="colorbar",na.value="white") +
guides(fill=guide_legend(title="AUC"))
plot(p)
pngname = sprintf("%sPlots/HeatAUC_%s.png", mainpath, folder)
ggsave(pngname, width = 30, height = 20, units = "cm")
}
